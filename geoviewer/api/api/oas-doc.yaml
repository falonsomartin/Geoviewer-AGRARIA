openapi: 3.0.3
info:
  version: 1.0.0
  title: Biolivar
  description: Generated with OAS TOOLS CLI 

paths:
  /api/v1/users:
    get:
      description: Returns all users
      operationId: getUsers
      responses:
        200:
          description: User list
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/user'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      description: Creates a new user
      operationId: addUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        description: User to be created
        required: true
      responses:
        201:
          description: User
        default:
            description: Unexpected error
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/error'
  /api/v1/users/{idUser}:
    get:
      description: Returns a single user by its ids
      operationId: findByIdUser
      parameters:
        - required: true
          name: idUser
          description: ids of the user to fetch
          in: path
          schema:
            type: object
      responses:
        200:
          description: User found by ids
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/user'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    put:
      description: Update a user based on its ids
      operationId: updateUser
      parameters:
        - required: true
          name: idUser
          description: ids of the user to update
          in: path
          schema:
            type: object
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user'
        description: User to be updated
        required: true
      responses:
        204:
          description: User updated
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    delete:
      description: Deletes a single user based on its ids
      operationId: deleteUser
      parameters:
        - required: true
          name: idUser
          description: ids of the user to delete
          in: path
          schema:
            type: object
      responses:
        204:
          description: User deleted
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'

components:
  schemas:
    user:
        type: object
        required:
          - idUser
          - email
        properties:
          idUser:
            type: object
          password:
            type: string
            format: password
            pattern: ^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#\$%\^&\*-_])(?=.{8,})
            writeOnly: true
          fullName:
            type: string
          email:
            type: string
            format: email
          cellPhone:
            type: string
            pattern: ^[\+]?[(]?[0-9]{0,3}[)]?[-\s\.]?[0-9]{3}[-\s\.]?[0-9]{4,6}$
          birthDate:
            type: string
            format: date
          role:
            type: string
            enum: [user, admin]
            readOnly: true
    error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
      additionalProperties: true